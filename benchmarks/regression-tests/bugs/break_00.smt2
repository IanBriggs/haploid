(set-logic ALL)
(set-option :global-declarations true)
(declare-sort _u0 0)
(declare-sort _u125 0)
(declare-sort _u126 0)
(declare-const _x1 _u0)
(declare-const _x11 _u0)
(declare-const _x127 (_dt19 (_dt24 Bool) (Array (Bag _u0) (Seq _u0)) Bool))
(declare-const _x129 (_dt24 (Set (Set _u0))))
(declare-const _x13 _u0)
(declare-const _x131 (_dt24 Bool))
(declare-const _x14 _u0)
(declare-const _x143 (_dt19 (_dt24 Bool) (Bag _u0) (Set Real)))
(declare-const _x144 (_dt19 (_dt24 Bool) Int (Set (Bag _u0))))
(declare-const _x145 (_dt19 (_dt24 Bool) Int (Set (Bag _u0))))
(declare-const _x146 (_ BitVec 14))
(declare-const _x150 (Set Real))
(declare-const _x151 (_dt24 (Set Real)))
(declare-const _x16 Bool)
(declare-const _x2 _u0)
(declare-const _x4 _u0)
(declare-const _x7 _u0)
(declare-const _x73 (Array (Bag _u0) (Seq _u0)))
(declare-const _x74 (Set (Bag _u0)))
(declare-const _x76 (Bag _u0))
(declare-const _x77 (Bag _u0))
(declare-const _x78 _u0)
(declare-const _x8 _u0)
(declare-const _x80 (Seq _u0))
(declare-const _x81 _dt23)
(declare-const _x83 (Seq _u0))
(declare-const _x84 (_dt24 Bool))
(declare-const _x89 (_dt19 _u0 _u0 Bool))
(declare-datatypes ((_dt19 3) (_dt23 0) (_dt24 1)) ((par (_p20 _p21 _p22) ((_cons50 (_sel45 _p21) (_sel46 Bool) (_sel47 _p21) (_sel48 _p22) (_sel49 _p22)) (_cons44 (_sel39 _p22) (_sel40 _p21) (_sel41 _p20) (_sel42 Bool) (_sel43 _p22)) (_cons38 (_sel36 _p21) (_sel37 _p22)) (_cons30 (_sel26 _u0) (_sel27 _p20) (_sel28 Bool) (_sel29 Bool)) (_cons35 (_sel31 _p22) (_sel32 _p22) (_sel33 _u0) (_sel34 _p20)))) ((_cons59 (_sel54 Bool) (_sel55 Bool) (_sel56 _u0) (_sel57 _u0) (_sel58 (Bag _u0))) (_cons53 (_sel51 Bool) (_sel52 Bool))) (par (_p25) ((_cons72 (_sel67 Bool) (_sel68 _p25) (_sel69 (_dt24 _p25)) (_sel70 _u0) (_sel71 _p25)) (_cons66 (_sel64 _p25) (_sel65 (_dt24 _p25))) (_cons62 (_sel60 _p25) (_sel61 _u0)) (_cons63 )))))
(assert ((_ is _cons30) _x127))
(assert (_sel49 _x127))
(assert (_sel51 _x81))
(assert (is_int (cos 8417331390009929701550503325032)))
(assert (let ((_let0 (set.singleton real.pi))) (let ((_let1 (set.inter _let0 _let0))) (set.member (set.choose _let0) (set.inter _let1 _let1)))))
(check-sat)
(exit)


;; EXPECTED: (set-logic ALL)
;; EXPECTED: (set-option :global-declarations true)
;; EXPECTED: (declare-sort _u0 0)
;; EXPECTED: (declare-sort _u125 0)
;; EXPECTED: (declare-sort _u126 0)
;; EXPECTED: (declare-const _x1 _u0)
;; EXPECTED: (declare-const _x11 _u0)
;; EXPECTED: (declare-const _x127 (_dt19 (_dt24 Bool) (Array (Bag _u0) (Seq _u0)) Bool))
;; EXPECTED: (declare-const _x129 (_dt24 (Set (Set _u0))))
;; EXPECTED: (declare-const _x13 _u0)
;; EXPECTED: (declare-const _x131 (_dt24 Bool))
;; EXPECTED: (declare-const _x14 _u0)
;; EXPECTED: (declare-const _x143 (_dt19 (_dt24 Bool) (Bag _u0) (Set Real)))
;; EXPECTED: (declare-const _x144 (_dt19 (_dt24 Bool) Int (Set (Bag _u0))))
;; EXPECTED: (declare-const _x145 (_dt19 (_dt24 Bool) Int (Set (Bag _u0))))
;; EXPECTED: (declare-const _x146 (_ BitVec 14))
;; EXPECTED: (declare-const _x150 (Set Real))
;; EXPECTED: (declare-const _x151 (_dt24 (Set Real)))
;; EXPECTED: (declare-const _x16 Bool)
;; EXPECTED: (declare-const _x2 _u0)
;; EXPECTED: (declare-const _x4 _u0)
;; EXPECTED: (declare-const _x7 _u0)
;; EXPECTED: (declare-const _x73 (Array (Bag _u0) (Seq _u0)))
;; EXPECTED: (declare-const _x74 (Set (Bag _u0)))
;; EXPECTED: (declare-const _x76 (Bag _u0))
;; EXPECTED: (declare-const _x77 (Bag _u0))
;; EXPECTED: (declare-const _x78 _u0)
;; EXPECTED: (declare-const _x8 _u0)
;; EXPECTED: (declare-const _x80 (Seq _u0))
;; EXPECTED: (declare-const _x81 _dt23)
;; EXPECTED: (declare-const _x83 (Seq _u0))
;; EXPECTED: (declare-const _x84 (_dt24 Bool))
;; EXPECTED: (declare-const _x89 (_dt19 _u0 _u0 Bool))
;; EXPECTED: (declare-datatypes ((_dt19 3) (_dt23 0) (_dt24 1)) ((par (_p20 _p21 _p22) ((_cons50 (_sel45 _p21) (_sel46 Bool) (_sel47 _p21) (_sel48 _p22) (_sel49 _p22)) (_cons44 (_sel39 _p22) (_sel40 _p21) (_sel41 _p20) (_sel42 Bool) (_sel43 _p22)) (_cons38 (_sel36 _p21) (_sel37 _p22)) (_cons30 (_sel26 _u0) (_sel27 _p20) (_sel28 Bool) (_sel29 Bool)) (_cons35 (_sel31 _p22) (_sel32 _p22) (_sel33 _u0) (_sel34 _p20)))) ((_cons59 (_sel54 Bool) (_sel55 Bool) (_sel56 _u0) (_sel57 _u0) (_sel58 (Bag _u0))) (_cons53 (_sel51 Bool) (_sel52 Bool))) (par (_p25) ((_cons72 (_sel67 Bool) (_sel68 _p25) (_sel69 (_dt24 _p25)) (_sel70 _u0) (_sel71 _p25)) (_cons66 (_sel64 _p25) (_sel65 (_dt24 _p25))) (_cons62 (_sel60 _p25) (_sel61 _u0)) (_cons63 )))))
;; EXPECTED: (assert ((_ is _cons30) _x127))
;; EXPECTED: (assert (_sel49 _x127))
;; EXPECTED: (assert (_sel51 _x81))
;; EXPECTED: (assert (is_int (cos 8417331390009929701550503325032)))
;; EXPECTED: (assert (let ((_let0 (set.singleton real.pi))) (let ((_let1 (set.inter _let0 _let0))) (set.member (set.choose _let0) (set.inter _let1 _let1)))))
;; EXPECTED: (check-sat)
;; EXPECTED: (exit)
