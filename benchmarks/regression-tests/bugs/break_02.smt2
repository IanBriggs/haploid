(set-option :global-declarations true)
(set-logic ALL)
(set-option :produce-models true)
(declare-sort _u0 0)
(declare-const _x1 (_ BitVec 16))
(declare-const _x2 (_ FloatingPoint 5 11))
(define-sort _s0 (_y0) (_ FloatingPoint 5 11))
(declare-const _x4 (_ BitVec 1))
(declare-const _x5 (_ FloatingPoint 5 11))
(declare-const _x6 _u0)
(declare-const _x7 (_ BitVec 16))
(declare-const _x8 (_ BitVec 5))
(declare-fun _x9 ((_ BitVec 10)) (_ FloatingPoint 5 11))
(declare-const _x11 (_ FloatingPoint 5 11))
(declare-const _x14 (_ FloatingPoint 5 11))
(check-sat)
(declare-const _x15 (_ BitVec 1))
(declare-const _x16 (_ BitVec 16))
(declare-const _x17 Real)
(declare-const _x19 (_ BitVec 10))
(declare-const _x20 (_ BitVec 1))
(declare-const _x21 (_ FloatingPoint 5 11))
(assert (let ((_let0 (- real.pi _x17 251233417340363062768125.409)))(let ((_let1 (* _let0 _let0 _x17 _x17)))(let ((_let2 (arctan _let1)))(let ((_let3 (+ _let2 _let2)))(let ((_let4 (+ _let3 _let3)))(let ((_let5 (arccsc _let1)))(distinct _let5 _let3 _let5 _let4 _let4))))))))
(assert (fp.isSubnormal (fp #b0 #b10110 #b0001001011)))
(assert (fp.isSubnormal (fp #b0 #b10110 #b0001001011)))
(assert (fp.isSubnormal (fp #b0 #b10110 #b0001001011)))
(exit)

;; EXPECTED: (set-logic ALL)
;; EXPECTED: (set-option :global-declarations true)
;; EXPECTED: (set-option :produce-models true)
;; EXPECTED: (declare-sort _u0 0)
;; EXPECTED: (declare-const _x1 (_ BitVec 16))
;; EXPECTED: (declare-const _x2 (_ FloatingPoint 5 11))
;; EXPECTED: (define-sort _s0 (_y0) (_ FloatingPoint 5 11))
;; EXPECTED: (declare-const _x4 (_ BitVec 1))
;; EXPECTED: (declare-const _x5 (_ FloatingPoint 5 11))
;; EXPECTED: (declare-const _x6 _u0)
;; EXPECTED: (declare-const _x7 (_ BitVec 16))
;; EXPECTED: (declare-const _x8 (_ BitVec 5))
;; EXPECTED: (declare-fun _x9 ((_ BitVec 10)) (_ FloatingPoint 5 11))
;; EXPECTED: (declare-const _x11 (_ FloatingPoint 5 11))
;; EXPECTED: (declare-const _x14 (_ FloatingPoint 5 11))
;; EXPECTED: (declare-const _x15 (_ BitVec 1))
;; EXPECTED: (declare-const _x16 (_ BitVec 16))
;; EXPECTED: (declare-const _x17 Real)
;; EXPECTED: (declare-const _x19 (_ BitVec 10))
;; EXPECTED: (declare-const _x20 (_ BitVec 1))
;; EXPECTED: (declare-const _x21 (_ FloatingPoint 5 11))
;; EXPECTED: (assert (fp.isSubnormal (fp #b0 #b10110 #b0001001011)))
;; EXPECTED: (assert (let ((_let0 (- real.pi _x17 251233417340363062768125.409))) (let ((_let1 (* _let0 _let0 _x17 _x17))) (let ((_let2 (arctan _let1))) (let ((_let3 (+ _let2 _let2))) (let ((_let4 (+ _let3 _let3))) (let ((_let5 (arccsc _let1))) (distinct _let5 _let3 _let5 _let4 _let4))))))))
;; EXPECTED: (check-sat)
;; EXPECTED: (exit)