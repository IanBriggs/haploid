(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
Generated by: Alexey Vishnyakov, Andrey Fedotov, Daniil Kuts, Alexander Novikov, Darya Parygina, Eli Kobrin, Vlada Logunova, Pavel Belecky, Shamil Kurmangaleev
Generated on: 2021-02-19
Generator: Sydr: Cutting Edge Dynamic Symbolic Execution https://arxiv.org/abs/2011.09269
           Triton framework inside https://triton.quarkslab.com/
Application: Dynamic symbolic execution
Target solver: Yices 2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun file_elf_input_7272 () (_ BitVec 8))
(declare-fun file_elf_input_7273 () (_ BitVec 8))
(declare-fun file_elf_input_7274 () (_ BitVec 8))
(declare-fun file_elf_input_7275 () (_ BitVec 8))
(declare-fun file_elf_input_7276 () (_ BitVec 8))
(declare-fun file_elf_input_7277 () (_ BitVec 8))
(declare-fun file_elf_input_7278 () (_ BitVec 8))
(declare-fun file_elf_input_7279 () (_ BitVec 8))
(define-fun ref!12084 () (_ BitVec 8) file_elf_input_7272) ; Byte reference
(define-fun ref!12085 () (_ BitVec 8) file_elf_input_7273) ; Byte reference
(define-fun ref!12086 () (_ BitVec 8) file_elf_input_7274) ; Byte reference
(define-fun ref!12087 () (_ BitVec 8) file_elf_input_7275) ; Byte reference
(define-fun ref!12088 () (_ BitVec 8) file_elf_input_7276) ; Byte reference
(define-fun ref!12089 () (_ BitVec 8) file_elf_input_7277) ; Byte reference
(define-fun ref!12090 () (_ BitVec 8) file_elf_input_7278) ; Byte reference
(define-fun ref!12091 () (_ BitVec 8) file_elf_input_7279) ; Byte reference
(define-fun ref!25406 () (_ BitVec 8) ref!12091) ; Byte reference - MOVSQ operation - 0x7fe08dcd157b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!25407 () (_ BitVec 8) ref!12090) ; Byte reference - MOVSQ operation - 0x7fe08dcd157b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!25408 () (_ BitVec 8) ref!12089) ; Byte reference - MOVSQ operation - 0x7fe08dcd157b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!25409 () (_ BitVec 8) ref!12088) ; Byte reference - MOVSQ operation - 0x7fe08dcd157b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!25410 () (_ BitVec 8) ref!12087) ; Byte reference - MOVSQ operation - 0x7fe08dcd157b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!25411 () (_ BitVec 8) ref!12086) ; Byte reference - MOVSQ operation - 0x7fe08dcd157b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!25412 () (_ BitVec 8) ref!12085) ; Byte reference - MOVSQ operation - 0x7fe08dcd157b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!25413 () (_ BitVec 8) ref!12084) ; Byte reference - MOVSQ operation - 0x7fe08dcd157b: rep movsq qword ptr [rdi], qword ptr [rsi]
(define-fun ref!30082 () (_ BitVec 8) ref!25406) ; Byte reference - MOV operation - 0x7fe08ad8d574: mov qword ptr [rbx + 0x30], rax
(define-fun ref!30083 () (_ BitVec 8) ref!25407) ; Byte reference - MOV operation - 0x7fe08ad8d574: mov qword ptr [rbx + 0x30], rax
(define-fun ref!30084 () (_ BitVec 8) ref!25408) ; Byte reference - MOV operation - 0x7fe08ad8d574: mov qword ptr [rbx + 0x30], rax
(define-fun ref!30085 () (_ BitVec 8) ref!25409) ; Byte reference - MOV operation - 0x7fe08ad8d574: mov qword ptr [rbx + 0x30], rax
(define-fun ref!30086 () (_ BitVec 8) ref!25410) ; Byte reference - MOV operation - 0x7fe08ad8d574: mov qword ptr [rbx + 0x30], rax
(define-fun ref!30087 () (_ BitVec 8) ref!25411) ; Byte reference - MOV operation - 0x7fe08ad8d574: mov qword ptr [rbx + 0x30], rax
(define-fun ref!30088 () (_ BitVec 8) ref!25412) ; Byte reference - MOV operation - 0x7fe08ad8d574: mov qword ptr [rbx + 0x30], rax
(define-fun ref!30089 () (_ BitVec 8) ref!25413) ; Byte reference - MOV operation - 0x7fe08ad8d574: mov qword ptr [rbx + 0x30], rax
(define-fun ref!92316 () (_ BitVec 8) ref!30082) ; Byte reference - MOV operation - 0x7fe08dd589bd: mov qword ptr [rsp + 0x40], r8
(define-fun ref!92317 () (_ BitVec 8) ref!30083) ; Byte reference - MOV operation - 0x7fe08dd589bd: mov qword ptr [rsp + 0x40], r8
(define-fun ref!92318 () (_ BitVec 8) ref!30084) ; Byte reference - MOV operation - 0x7fe08dd589bd: mov qword ptr [rsp + 0x40], r8
(define-fun ref!92319 () (_ BitVec 8) ref!30085) ; Byte reference - MOV operation - 0x7fe08dd589bd: mov qword ptr [rsp + 0x40], r8
(define-fun ref!92320 () (_ BitVec 8) ref!30086) ; Byte reference - MOV operation - 0x7fe08dd589bd: mov qword ptr [rsp + 0x40], r8
(define-fun ref!92321 () (_ BitVec 8) ref!30087) ; Byte reference - MOV operation - 0x7fe08dd589bd: mov qword ptr [rsp + 0x40], r8
(define-fun ref!92322 () (_ BitVec 8) ref!30088) ; Byte reference - MOV operation - 0x7fe08dd589bd: mov qword ptr [rsp + 0x40], r8
(define-fun ref!92323 () (_ BitVec 8) ref!30089) ; Byte reference - MOV operation - 0x7fe08dd589bd: mov qword ptr [rsp + 0x40], r8
(define-fun ref!92817 () (_ BitVec 8) ref!92316) ; Byte reference - MOV operation - 0x7fe08dc90680: mov qword ptr [rbp - 0x520], rax
(define-fun ref!92818 () (_ BitVec 8) ref!92317) ; Byte reference - MOV operation - 0x7fe08dc90680: mov qword ptr [rbp - 0x520], rax
(define-fun ref!92819 () (_ BitVec 8) ref!92318) ; Byte reference - MOV operation - 0x7fe08dc90680: mov qword ptr [rbp - 0x520], rax
(define-fun ref!92820 () (_ BitVec 8) ref!92319) ; Byte reference - MOV operation - 0x7fe08dc90680: mov qword ptr [rbp - 0x520], rax
(define-fun ref!92821 () (_ BitVec 8) ref!92320) ; Byte reference - MOV operation - 0x7fe08dc90680: mov qword ptr [rbp - 0x520], rax
(define-fun ref!92822 () (_ BitVec 8) ref!92321) ; Byte reference - MOV operation - 0x7fe08dc90680: mov qword ptr [rbp - 0x520], rax
(define-fun ref!92823 () (_ BitVec 8) ref!92322) ; Byte reference - MOV operation - 0x7fe08dc90680: mov qword ptr [rbp - 0x520], rax
(define-fun ref!92824 () (_ BitVec 8) ref!92323) ; Byte reference - MOV operation - 0x7fe08dc90680: mov qword ptr [rbp - 0x520], rax
(define-fun ref!92830 () (_ BitVec 64) (concat (concat (concat (concat (concat (concat (concat ref!92817 ref!92818) ref!92819) ref!92820) ref!92821) ref!92822) ref!92823) ref!92824)) ; MOV operation - 0x7fe08dc90116: mov rdi, qword ptr [rbp - 0x520]
(define-fun ref!92832 () (_ BitVec 64) ref!92830) ; MOV operation - 0x7fe08dc8c760: mov rax, rdi
(define-fun ref!92835 () (_ BitVec 64) ((_ extract 127 64) (bvmul ((_ zero_extend 64) ref!92832) ((_ zero_extend 64) (_ bv14757395258967641293 64))))) ; MUL operation - 0x7fe08dc8c767: mul rcx
(define-fun ref!92839 () (_ BitVec 64) (bvlshr ref!92835 (bvand ((_ zero_extend 56) (_ bv3 8)) (_ bv63 64)))) ; SHR operation - 0x7fe08dc8c76a: shr rdx, 3
(define-fun ref!92846 () (_ BitVec 64) (bvadd ref!92839 (bvmul ref!92839 (_ bv4 64)))) ; LEA operation - 0x7fe08dc8c76e: lea rax, [rdx + rdx*4]
(define-fun ref!92848 () (_ BitVec 64) (bvadd ref!92846 ref!92846)) ; ADD operation - 0x7fe08dc8c772: add rax, rax
(define-fun ref!92856 () (_ BitVec 64) (bvsub ref!92830 ref!92848)) ; SUB operation - 0x7fe08dc8c775: sub rdi, rax
(define-fun ref!92864 () (_ BitVec 64) (bvand ref!92839 ref!92839)) ; TEST operation - 0x7fe08dc8c778: test rdx, rdx
(define-fun ref!92869 () (_ BitVec 1) (ite (= ref!92864 (_ bv0 64)) (_ bv1 1) (_ bv0 1))) ; Zero flag - 0x7fe08dc8c778: test rdx, rdx
(assert (bvuge (bvadd (_ bv140602429439808 64) ref!92856) (_ bv140602429439808 64)))
(assert (bvule (bvadd (_ bv140602429439808 64) ref!92856) (_ bv140602429439907 64)))
(assert (= ref!92869 (_ bv0 1)))
(check-sat)
(exit)
